var r=`:host { user-select: none; }\r
::slotted(*)\r
{\r
    user-select: none;\r
    cursor: pointer;\r
}\r
::slotted(:hover)\r
{\r
    background-color: var(--background-color-hover, rgb(221, 221, 221));\r
}\r
::slotted([aria-selected])\r
{\r
    background-color: var(--background-color-selected, highlight);\r
    color: var(--color-selected, highlighttext);\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    ::slotted(:hover)\r
    {\r
        --background-color-hover: rgb(197, 197, 197);\r
    }\r
}`;var d=new CSSStyleSheet;d.replaceSync(r);document.addEventListener("keydown",l=>{if(i.multipleModifierKeys.indexOf(l.code)>-1){i._multipleModifierActive=!0;return}});document.addEventListener("keyup",l=>{i.multipleModifierKeys.indexOf(l.code)>-1&&(i._multipleModifierActive=i.multipleModifierActive)});var c="selectable-items",i=class l extends HTMLElement{static observedAttributes=[];static _multipleModifierActive=!1;static multipleModifierKeys=["ShiftLeft","ShiftRight","ControlLeft","ControlRight"];static multipleModifierActive=!1;static selectKeys=["Enter","Space"];static selectedClassName="selected";selected=()=>[...this.querySelectorAll(`.${l.selectedClassName}`)];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.shadowRoot.adoptedStyleSheets.push(d),this.addEventListener("keydown",e=>{if(l.selectKeys.indexOf(e.code)>-1){let t=e.composedPath().find(s=>s instanceof HTMLElement&&s.parentElement==this);if(this.dispatchEvent(new Event("change"))==!1)return;e.preventDefault(),this.selectItem(t)}}),this.addEventListener("click",e=>{let t=e.composedPath().find(s=>s instanceof HTMLElement&&s.parentElement==this);t==null||this.dispatchEvent(new Event("change"))==!1||this.selectItem(t)}),this.shadowRoot.querySelector("slot").addEventListener("slotchange",e=>{let t=e.target.assignedElements();for(let o=0;o<t.length;o++)t[o].hasAttribute("tabIndex")==!1&&t[o].setAttribute("tabIndex","0")})}selectItem(e){let t=this.getAttribute("multiple")??this.getAttribute("multi");(l._multipleModifierActive==!1||t==null)&&[...(e.parentElement??this).children].reduce((s,n,h)=>(this.contains(n)&&n.hasAttribute("aria-selected")&&s.push(n),s),new Array).forEach(s=>this.#t(s)),this.#e(e)}#e(e){e.classList.add(this.getAttribute("selected-class-name")??l.selectedClassName),e.setAttribute("aria-selected","option")}#t(e){e.classList.remove(this.getAttribute("selected-class-name")??l.selectedClassName),e.removeAttribute("aria-selected")}};customElements.get(c)==null&&customElements.define(c,i);export{i as SelectableItemsElement};
