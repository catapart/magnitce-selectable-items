var c=`:host { user-select: none; }\r
::slotted(*)\r
{\r
    user-select: none;\r
    cursor: pointer;\r
}\r
::slotted(:hover)\r
{\r
    background-color: var(--background-color-hover, rgb(221, 221, 221));\r
}\r
::slotted([aria-selected])\r
{\r
    background-color: var(--background-color-selected, highlight);\r
    color: var(--color-selected, highlighttext);\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    ::slotted(:hover)\r
    {\r
        --background-color-hover: rgb(197, 197, 197);\r
    }\r
}`;var u=new CSSStyleSheet;u.replaceSync(c);document.addEventListener("keydown",i=>{if(r.multipleModifierKeys.indexOf(i.code)>-1){r._multipleModifierActive=!0;return}});document.addEventListener("keyup",i=>{r.multipleModifierKeys.indexOf(i.code)>-1&&(r._multipleModifierActive=r.multipleModifierActive)});function d(i,e){let t=i.composedPath(),l;for(let s=0;s<t.length;s++){let o=t[s];if(o==e)break;o instanceof HTMLElement&&!(o instanceof HTMLSlotElement)&&(l=o)}return l}var a="selectable-items",r=class i extends HTMLElement{static observedAttributes=[];static _multipleModifierActive=!1;static multipleModifierKeys=["ShiftLeft","ShiftRight","ControlLeft","ControlRight"];static multipleModifierActive=!1;static selectKeys=["Enter","Space"];static selectedClassName="selected";selected=()=>{let e=this.querySelector("slot"),t=this;for(;e!=null;)t=e,e=e.querySelector("slot");return(t instanceof HTMLSlotElement?t.assignedElements():[...t.children]).filter(s=>s instanceof HTMLElement&&s.hasAttribute("aria-selected"))};constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.shadowRoot.adoptedStyleSheets.push(u),this.addEventListener("keydown",e=>{if(i.selectKeys.indexOf(e.code)>-1){let t=d(e,this);if(t==null||this.#e(t)==!1)return;e.preventDefault(),this.selectItem(t)}}),this.addEventListener("click",e=>{let t=d(e,this);t==null||this.#e(t)==!1||this.selectItem(t)}),this.shadowRoot.querySelector("slot").addEventListener("slotchange",e=>{let t=e.target.assignedElements();for(let l=0;l<t.length;l++)t[l].hasAttribute("tabIndex")==!1&&t[l].setAttribute("tabIndex","0")})}selectItem(e){let t=this.getAttribute("multiple")??this.getAttribute("multi");return(i._multipleModifierActive==!1||t==null)&&[...(e.parentElement??this).children].reduce((s,o,n)=>(o.hasAttribute("aria-selected")&&s.push(o),s),new Array).forEach(s=>this.#l(s)),this.#t(e),this.selected()}#t(e){e.classList.add(this.getAttribute("selected-class-name")??i.selectedClassName),e.setAttribute("aria-selected","option")}#l(e){e.classList.remove(this.getAttribute("selected-class-name")??i.selectedClassName),e.removeAttribute("aria-selected")}#e(e){let t=new Set([e]),l=this.hasAttribute("multiple")||this.hasAttribute("multi");if(i._multipleModifierActive==!0&&l==!0){let o=this.selected();console.log(o);for(let n of this.selected())t.add(n)}return this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,cancelable:!0,detail:{selected:Array.from(t)}}))}};customElements.get(a)==null&&customElements.define(a,r);export{r as SelectableItemsElement};
